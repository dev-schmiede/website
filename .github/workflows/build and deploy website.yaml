# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: üöÄ Deploy website on push

on:
    # Runs on pushes
    push:

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: 'pages'
    cancel-in-progress: false

# Default to bash
defaults:
    run:
        shell: bash

jobs:
    # Build job
    web-deploy:
        name: üéâ Deploy
        runs-on: ubuntu-latest
        env:
            HUGO_VERSION: 0.128.0
        steps:
            - name: üíæ Install Hugo CLI
              run: |
                  wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
                  && sudo dpkg -i ${{ runner.temp }}/hugo.deb
            
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                  submodules: recursive
                  fetch-depth: 0

            - name: üõ†Ô∏è Build with Hugo
              env:
                  HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
                  HUGO_ENVIRONMENT: production
                  TZ: Europe/Berlin

              run: |
                  hugo \
                    --gc \
                    --minify \
                    --baseURL "${{ vars.WEBSITE_BASE_URL }}/"

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: ./public

            - name: üìÇ Sync files
              uses: SamKirkland/FTP-Deploy-Action@v4.3.5
              with:
                  server: ftp.${{ secrets.FTP_SERVER_URL }}
                  username: ${{ secrets.FTP_USER }}
                  password: ${{ secrets.FTP_PASSWORD }}
                  local-dir: ./public/

